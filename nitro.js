const axios = require('axios');
const fs = require('fs');

const apiUrl = 'https://api.discord.gx.games/v1/direct-fulfillment';
const outputFile = 'nitro.txt';

let delay = 30;

try {
    fs.readFileSync(outputFile, 'utf-8');
} catch (error) {
    fs.writeFileSync(outputFile, '');
}

async function generateRandomSHA256Hash() {
    const randomData = new Uint8Array(32);
    const hashBuffer = await crypto.subtle.digest('SHA-256', randomData);
    const hashArray = Array.from(new Uint8Array(hashBuffer));
    const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, '0')).join('');
    return hashHex;
}

const nitro = async () => {
    try {
        const partnerUserId = await generateRandomSHA256Hash();
        const res = await axios.post(apiUrl, { partnerUserId });
        const token = res.data.token;
        const final = `https://discord.com/billing/partner-promotions/1180231712274387115/${token}`;
        fs.appendFileSync(outputFile, final + '\n');
        lines++;
        console.log('Generated Nitro Code ' + lines);
        delay = 30;
    } catch (err) {
        console.log(`Error Generating Nitro Code. Retrying in ${delay} seconds...`);
        await sleep(delay * 1000);
        // Increase the delay exponentially, up to a maximum of 4 minutes (240 seconds)
        delay = Math.min(delay * 2, 240);
        await nitro();
    }
};

const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));
let lines = fs.readFileSync(outputFile, 'utf-8').split(/\r?\n/).length;

const runNitro = async () => {
    while (true) {
        await nitro();
    }
};

runNitro();
